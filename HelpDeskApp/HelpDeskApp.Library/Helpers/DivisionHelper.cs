//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToModels.v3.2 (entitiesToModels.codeplex.com).
//     Timestamp: 2016/02/20 - 17:52:55
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using HelpDeskApp.Common.Models;
using HelpDeskApp.Entity;

namespace HelpDeskApp.Library.Helpers
{

    /// <summary>
    /// Assembler for <see cref="DIVISION"/> and <see cref="Division"/>.
    /// </summary>
    public static partial class DivisionHelper
    {
        /// <summary>
        /// Invoked when <see cref="ToModel"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="Division"/> converted from <see cref="DIVISION"/>.</param>
        static partial void OnDTO(this DIVISION entity, Division dto);

        /// <summary>
        /// Invoked when <see cref="ToTable"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="DIVISION"/> converted from <see cref="Division"/>.</param>
        static partial void OnEntity(this Division dto, DIVISION entity);

        /// <summary>
        /// Converts this instance of <see cref="Division"/> to an instance of <see cref="DIVISION"/>.
        /// </summary>
        /// <param name="dto"><see cref="Division"/> to convert.</param>
        public static DIVISION ToTable(this Division dto)
        {
            if (dto == null) return null;

            var entity = new DIVISION();

            entity.Id = dto.Id;
            entity.Descripcion = dto.Descripcion;
            entity.departamentoId = dto.departamentoId;
            entity.Fecha_Creacion = DateTime.Now;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="DIVISION"/> to an instance of <see cref="Division"/>.
        /// </summary>
        /// <param name="entity"><see cref="DIVISION"/> to convert.</param>
        public static Division ToModel(this DIVISION entity)
        {
            if (entity == null) return null;

            var dto = new Division();

            dto.Id = entity.Id;
            dto.Descripcion = entity.Descripcion;
            dto.departamentoId = entity.departamentoId;
            dto.Fecha_Creacion = entity.Fecha_Creacion;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="Division"/> to an instance of <see cref="DIVISION"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<DIVISION> ToTables(this IEnumerable<Division> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToTable()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="DIVISION"/> to an instance of <see cref="Division"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<Division> ToModels(this IEnumerable<DIVISION> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToModel()).ToList();
        }

        public static bool Save(Division model)
        {
            bool result;

            using (HelpDeskApfEntities context = new HelpDeskApfEntities())
            {
                

                try
                {
                    context.DIVISION.Add(model.ToTable());
                    context.SaveChanges();
                    result = true;
                }
                catch (Exception)
                {

                    result = false;
                }

            }

            return result;
        }

        public static List<Division> GetAll()
        {
            List<Division> list;

            using (HelpDeskApfEntities context = new HelpDeskApfEntities())
            {
                var queryResult = context.DIVISION.ToList();
                list = queryResult.Count > 0 ? ToModels(queryResult) : new List<Division>();
            }
            return list;
        }

        public static Division GetDivisionByPrimaryKey(int Id)
        {
            Division Obj;

            using (HelpDeskApfEntities context = new HelpDeskApfEntities())
            {
                var queryResult = context.DIVISION.SingleOrDefault(a => a.Id == Id);
                Obj = ToModel(queryResult);
            }
            return Obj;

        }

    }
}
