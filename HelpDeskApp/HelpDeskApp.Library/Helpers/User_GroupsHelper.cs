//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToModels.v3.2 (entitiesToModels.codeplex.com).
//     Timestamp: 2016/02/20 - 17:52:57
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using HelpDeskApp.Common.Models;
using HelpDeskApp.Entity;

namespace HelpDeskApp.Library.Helpers
{

    /// <summary>
    /// Assembler for <see cref="USER_GROUPS"/> and <see cref="User_Groups"/>.
    /// </summary>
    public static partial class User_GroupsHelper
    {
        /// <summary>
        /// Invoked when <see cref="ToModel"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="User_Groups"/> converted from <see cref="USER_GROUPS"/>.</param>
        static partial void OnDTO(this USER_GROUPS entity, User_Groups dto);

        /// <summary>
        /// Invoked when <see cref="ToTable"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="USER_GROUPS"/> converted from <see cref="User_Groups"/>.</param>
        static partial void OnEntity(this User_Groups dto, USER_GROUPS entity);

        /// <summary>
        /// Converts this instance of <see cref="User_Groups"/> to an instance of <see cref="USER_GROUPS"/>.
        /// </summary>
        /// <param name="dto"><see cref="User_Groups"/> to convert.</param>
        public static USER_GROUPS ToTable(this User_Groups dto)
        {
            if (dto == null) return null;

            var entity = new USER_GROUPS();

            entity.UserId = dto.UserId;
            entity.GroupId = dto.GroupId;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="USER_GROUPS"/> to an instance of <see cref="User_Groups"/>.
        /// </summary>
        /// <param name="entity"><see cref="USER_GROUPS"/> to convert.</param>
        public static User_Groups ToModel(this USER_GROUPS entity)
        {
            if (entity == null) return new User_Groups();

            var dto = new User_Groups();

            dto.UserId = entity.UserId;
            dto.GroupId = entity.GroupId;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="User_Groups"/> to an instance of <see cref="USER_GROUPS"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<USER_GROUPS> ToTables(this IEnumerable<User_Groups> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToTable()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="USER_GROUPS"/> to an instance of <see cref="User_Groups"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<User_Groups> ToModels(this IEnumerable<USER_GROUPS> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToModel()).ToList();
        }

        public static bool Save(User_Groups model)
        {
            bool result;

            using (HelpDeskApfEntities context = new HelpDeskApfEntities())
            {
                

                try
                {
                    context.USER_GROUPS.Add(model.ToTable());
                    context.SaveChanges();
                    result = true;
                }
                catch (Exception)
                {

                    result = false;
                }

            }

            return result;
        }

        public static List<User_Groups> GetAll()
        {
            List<User_Groups> list;

            using (HelpDeskApfEntities context = new HelpDeskApfEntities())
            {
                var queryResult = context.USER_GROUPS.ToList();
                list = queryResult.Count > 0 ? ToModels(queryResult) : new List<User_Groups>();
            }
            return list;
        }

        public static User_Groups GetUserGroupsByPrimaryKey(int UserId, int GroupId)
        {
            User_Groups Obj;

            using (HelpDeskApfEntities context = new HelpDeskApfEntities())
            {
                var queryResult = context.USER_GROUPS.SingleOrDefault(a => a.UserId == UserId && a.GroupId == GroupId);
                Obj = ToModel(queryResult);
            }
            return Obj;

        }

        

    }
}
