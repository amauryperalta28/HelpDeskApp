//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToModels.v3.2 (entitiesToModels.codeplex.com).
//     Timestamp: 2016/02/20 - 17:52:58
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using HelpDeskApp.Common.Models;
using HelpDeskApp.Entity;

namespace HelpDeskApp.Library.Helpers
{

    /// <summary>
    /// Assembler for <see cref="USUARIOS"/> and <see cref="Usuarios"/>.
    /// </summary>
    public static partial class UsuariosHelper
    {
        /// <summary>
        /// Invoked when <see cref="ToModel"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="Usuarios"/> converted from <see cref="USUARIOS"/>.</param>
        static partial void OnDTO(this USUARIOS entity, Usuarios dto);

        /// <summary>
        /// Invoked when <see cref="ToTable"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="USUARIOS"/> converted from <see cref="Usuarios"/>.</param>
        static partial void OnEntity(this Usuarios dto, USUARIOS entity);

        /// <summary>
        /// Converts this instance of <see cref="Usuarios"/> to an instance of <see cref="USUARIOS"/>.
        /// </summary>
        /// <param name="dto"><see cref="Usuarios"/> to convert.</param>
        public static USUARIOS ToTable(this Usuarios dto)
        {
            if (dto == null) return null;

            var entity = new USUARIOS();

            entity.id = dto.id;
            entity.PrimerNombre = dto.PrimerNombre;
            entity.SegundoNombre = dto.SegundoNombre;
            entity.PrimerApellido = dto.PrimerApellido;
            entity.SegundoApellido = dto.SegundoApellido;
            entity.Usuario = dto.Usuario;
            entity.Fecha_creacion = DateTime.Now;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="USUARIOS"/> to an instance of <see cref="Usuarios"/>.
        /// </summary>
        /// <param name="entity"><see cref="USUARIOS"/> to convert.</param>
        public static Usuarios ToModel(this USUARIOS entity)
        {
            if (entity == null) return null;

            var dto = new Usuarios();

            dto.id = entity.id;
            dto.PrimerNombre = entity.PrimerNombre;
            dto.SegundoNombre = entity.SegundoNombre;
            dto.PrimerApellido = entity.PrimerApellido;
            dto.SegundoApellido = entity.SegundoApellido;
            dto.Usuario = entity.Usuario;
            dto.Fecha_creacion = entity.Fecha_creacion;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="Usuarios"/> to an instance of <see cref="USUARIOS"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<USUARIOS> ToTables(this IEnumerable<Usuarios> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToTable()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="USUARIOS"/> to an instance of <see cref="Usuarios"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<Usuarios> ToModels(this IEnumerable<USUARIOS> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToModel()).ToList();
        }

        public static bool Save(Usuarios model)
        {
            bool result;
            bool modelIsNull = UtilsHelperGeneric<Usuarios>.modelIsNull(model);

            using (HelpDeskApfEntities context = new HelpDeskApfEntities())
            {
                try
                {
                    context.USUARIOS.Add(model.ToTable());
                    context.SaveChanges();
                    result = true;
                }
                catch (Exception)
                {

                    result = false;
                }
                
            }

            return result;
        }

        public static List<Usuarios> GetAll()
        {
            List<Usuarios> list;

            using (HelpDeskApfEntities context = new HelpDeskApfEntities())
            {
                var queryResult = context.USUARIOS.ToList();
                list = queryResult.Count > 0 ? ToModels(queryResult) : new List<Usuarios>();
            }
            return list;
        }

        public static Usuarios GetUsuario(string usuario)
        {
            Usuarios Obj;

            using (HelpDeskApfEntities context = new HelpDeskApfEntities())
            {
                var queryResult = context.USUARIOS.SingleOrDefault(a => a.Usuario == usuario);
                Obj = ToModel(queryResult);
            }
            return Obj;
        }

        public static Usuarios GetUsuarioByPrimaryKey(int UserId)
        {
            Usuarios Obj;

            using (HelpDeskApfEntities context = new HelpDeskApfEntities())
            {
                var queryResult = context.USUARIOS.SingleOrDefault(a=>a.id == UserId);
                Obj = ToModel(queryResult);
            }
            return Obj;
        
        }

        public static bool FollowUser(Usuarios_Seguidos rel)
        {
            bool result = Usuarios_SeguidosHelper.Save(rel);

            return result;
        }

        public static bool UnFollowUser(Usuarios_Seguidos rel)
        {
            bool result = Usuarios_SeguidosHelper.Delete(rel);

            return result;
        }


    }
}
